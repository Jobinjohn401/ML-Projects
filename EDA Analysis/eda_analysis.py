# -*- coding: utf-8 -*-
"""EDA Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WnZyZY85ZoXdZfZDBcsc6wjLEXJHuiB5
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

data = pd.read_csv("NetflixOriginals.csv", encoding='latin-1')

data.info()

data.head()

data.sample(5)

data.isna().sum()

data.describe()

data.duplicated().sum()

# Genre Distribution
genre_counts = data['Genre'].value_counts()
sns.barplot(y=genre_counts.index, x=genre_counts.values)
plt.title('Distribution of Genres')
plt.show()

language_counts = data['Language'].value_counts()
sns.barplot(y=language_counts.index, x=language_counts.values)
plt.title('Distribution of Languages')
plt.show()

sns.histplot(data['Runtime'], bins=20, kde=True)
plt.title('Distribution of Runtimes')
plt.xlabel('Runtime (minutes)')
plt.show()

# IMDB Score Distribution
sns.histplot(data['IMDB Score'], bins=20, kde=True)
plt.title('Distribution of IMDB Scores')
plt.xlabel('IMDB Score')
plt.show()

data['Premiere'] = pd.to_datetime(data['Premiere'], format='mixed', errors='coerce')

# Yearly distribution of Premieres
data['Year'] = data['Premiere'].dt.year
sns.countplot(x='Year', data=data)
plt.title('Number of Premieres per Year')
plt.xticks(rotation=45)
plt.show()

correlation = data[['Runtime', 'IMDB Score']].corr()
sns.heatmap(correlation, annot=True, cmap='coolwarm')
plt.title('Correlation Matrix')
plt.show()

plt.figure(figsize=(12, 8))
sns.scatterplot(x='IMDB Score', y='Genre', data=data)
plt.title('IMDB Scores across Different Genres')
plt.show()

plt.figure(figsize=(12, 8))
sns.boxplot(x='Runtime', y='Language', data=data)
plt.title('Runtimes across Different Languages')
plt.show()